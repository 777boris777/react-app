{"version":3,"sources":["component/authorization/error.js","component/authorization/login/login.js","component/authorization/signup/signup.js","component/authorization/flip.js","component/home/home.js","component/posts/post/post.js","component/posts/header/header.js","component/posts/posts.js","component/otherProfile/menuOtherProfile/menuOtherProfile.js","component/otherProfile/otherProfilePost/otherProfilePosts.js","component/otherProfile/contentOtherProfile/contentOtherProfile.js","component/otherProfile/otherProfile.js","component/myProfile/menuProfile/addProfilePost/addProfilePost.js","component/UI/model/model.js","component/myProfile/menuProfile/menuProfile.js","component/myProfile/profilePost/updatePost/updatePost.js","component/myProfile/profilePost/profilePosts.js","component/myProfile/contentProfile/contentProfile.js","component/myProfile/profile.js","App.js","index.js"],"names":["Error","touched","message","style","color","fontSize","margin","padding","validationSchema","Yup","shape","email","label","max","required","password","min","Login","state","redirect","login","values","a","fetch","method","headers","body","JSON","stringify","data","json","fetchedData","console","log","localStorage","setItem","auth_token","this","to","initialValues","onSubmit","setSubmitting","resetForm","setState","errors","handleChange","handleBlur","handleSubmit","className","htmlFor","id","type","name","placeholder","onChange","onBlur","value","React","Component","lastName","confirmPassword","oneOf","SignUp","signUp","profileImg","Flip","useState","anim","setAnimation","onClick","join","Home","ponel","token","getItem","width","height","marginTop","textDecoration","textAlign","alignItems","justifyContent","Post","props","userId","Avatar","src","img","charAt","split","date","title","content","Header","Posts","posts","map","esi","_id","key","userImg","length","marginLeft","MenuProfile","avatar","OtherProfilePosts","ProfilePosts","ContentOtherProfile","Profile","fetchData","match","params","userName","toggle","open","handleOpen","close","handleClose","AddProfilePost","error","add","text","window","location","reload","v","target","SimpleModal","Modal","backgroundColor","onClose","setOpen","setRedirect","removeItem","UpdatePost","Update","edit","deletePost","background","ContentProfile","targetUser","massenge","fetchPosts","App","postinfo","path","exact","component","render","OtherProfile","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d12e5341.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Error = ({ touched, message }) => {\r\n    if (!touched) {\r\n        return <div style={{ fontSize: '10px', margin: '0', padding: '0' }}>&nbsp;</div>\r\n    }\r\n    if (message) {\r\n        return <div style={{ color: 'red', fontSize: '10px', margin: '0', padding: '0' }}>{message}</div>\r\n    }\r\n    return <div>&nbsp;</div>\r\n}\r\n\r\nexport default Error","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport './login.css'\r\nimport Error from '../error'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .label('Email')\r\n        .email('Must be a valid email address')\r\n        .max(30, 'Must be shorter than 30')\r\n        .required('required'),\r\n    password: Yup.string()\r\n        .label('Password')\r\n        .min(8, 'Must be more than 8 letters')\r\n        .required('required')\r\n})\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        redirect: false\r\n    }\r\n    login = async (values) => {\r\n        try {\r\n            const data = await fetch('https://immense-bastion-77462.herokuapp.com/auth/signin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(values)\r\n            })\r\n            const fetchedData = await data.json()\r\n            console.log(fetchedData);\r\n            localStorage.setItem('token', fetchedData.auth_token)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/profile' />\r\n        } else {\r\n            return (\r\n                <Formik initialValues={{ email: '', password: '' }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                        setSubmitting(true)\r\n                        this.login(values)\r\n                        resetForm()\r\n                        this.setState({ redirect: true })\r\n                        setSubmitting(false)\r\n                    }}>\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit }) => {\r\n                        return (\r\n                            <form className='form' onSubmit={handleSubmit}>\r\n                                <label htmlFor='email'><b>Email</b></label>\r\n                                <br />\r\n                                <input\r\n                                    id='email'\r\n                                    type='email'\r\n                                    name='email'\r\n                                    placeholder='Enter email'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.email}\r\n                                    className={touched.email && errors.email ? \"ERRORKA\" : null} />\r\n                                <Error touched={touched.email} message={errors.email} />\r\n                                \r\n                                <label htmlFor='password'><b>Password</b></label>\r\n                                <br />\r\n                                <input\r\n                                    id='password'\r\n                                    type='password'\r\n                                    name='password'\r\n                                    placeholder='Enter Password'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                    className={touched.password && errors.password ? \"ERRORKA\" : null} />\r\n                                <Error touched={touched.password} message={errors.password} />\r\n                                \r\n                                <br />\r\n                                <button type='submit'>Login</button>\r\n                            </form>\r\n                        )\r\n                    }}\r\n                </Formik>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport './signup.css'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Error from '../error'\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email('Must be a valid email address')\r\n        .max(30, 'Must be shorter than 30')\r\n        .required('required'),\r\n    password: Yup.string()\r\n        .min(8, 'Must be more than 8 letters')\r\n        .required('required'),\r\n    name: Yup.string()\r\n        .required('required')\r\n        .label('Name'),\r\n    lastName: Yup.string()\r\n        .required('required')\r\n        .label('LastName'),\r\n    confirmPassword: Yup.string()\r\n        .required('required')\r\n        .label('Confirm password')\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n    // .test('passwords-match', 'Passwords must match ya fool', (value) => {\r\n    //     return this.parent.password === value;\r\n    // }),\r\n})\r\n//     iconFile: Yup.mixed()\r\n//         .test('fileSize', \"File Size is too large\", value => value.size <= fileSize)\r\n//         .test('fileType', \"Unsupported File Format\", value => format.includes(value.type))\r\n\r\n// const fileSize='120mb';\r\n// const format = ['image/jpg', 'image/jpeg', 'image/gif', 'image/png']\r\n\r\nclass SignUp extends React.Component {\r\n    state = {\r\n        redirect: false\r\n    }\r\n    signUp = async (values) => {\r\n        try {\r\n            const data = await fetch('https://immense-bastion-77462.herokuapp.com/auth/signup', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(values)\r\n            })\r\n            console.log(data);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/profile' />\r\n        } else {\r\n            return (\r\n                <Formik\r\n                    initialValues={{ email: '', password: '', confirmPassword: '', name: '', lastName: '', profileImg: '' }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                        setSubmitting(true)\r\n                        this.signUp(values)\r\n                        resetForm()\r\n                        this.setState({ redirect: true })\r\n                        setSubmitting(false)\r\n                    }}>\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit }) => (\r\n                            <form className=\"form\" onSubmit={handleSubmit}>\r\n                                <label htmlFor=\"text\"><b>Name</b></label>\r\n                                <br />\r\n                                <input\r\n                                    id=\"text\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter your name\"\r\n                                    name=\"name\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.name}\r\n                                    className={touched.name && errors.name ? 'ERRORKA' : null} />\r\n                                <Error touched={touched.name} message={errors.name} />\r\n\r\n                                <label htmlFor=\"text\"><b>Last Name</b></label>\r\n                                <br />\r\n                                <input\r\n                                    id=\"text\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter your last name\"\r\n                                    name=\"lastName\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.lastName}\r\n                                    className={touched.lastName && errors.lastName ? 'ERRORKA' : null} />\r\n                                <Error touched={touched.lastName} message={errors.lastName} />\r\n\r\n                                <label htmlFor=\"email\"><b>Email</b></label>\r\n                                <br />\r\n                                <input\r\n                                    id=\"text\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter email\"\r\n                                    name=\"email\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.email}\r\n                                    className={touched.email && errors.email ? 'ERRORKA' : null} />\r\n                                <Error touched={touched.email} message={errors.email} />\r\n                                \r\n                                <label htmlFor=\"password\"><b>Password</b></label>\r\n                                <br />\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                    className={touched.password && errors.password ? 'ERRORKA' : null} />\r\n                                <Error touched={touched.password} message={errors.password} />\r\n\r\n                                <label htmlFor=\"Confirm Password\"><b>Confirm Password</b></label>\r\n                                <br />\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    name=\"confirmPassword\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.confirmPassword}\r\n                                    className={touched.confirmPassword && errors.confirmPassword ? 'ERRORKA' : null} />\r\n                                <Error touched={touched.confirmPassword} message={errors.confirmPassword} />\r\n\r\n                                <label htmlFor=\"profileImg\"><b>Image</b></label>\r\n                                <br />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    // placeholder=\"\"\r\n                                    name=\"profileImg\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.profileImg}\r\n                                    className={touched.profileImg && errors.profileImg ? 'ERRORKA' : null} />\r\n                                <br />\r\n                                <button type=\"submit\">Sign Up</button>\r\n                            </form>\r\n                        )}\r\n                </Formik>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { useState } from 'react';\r\nimport Login from './login/login';\r\nimport SignUp from './signup/signup';\r\nimport './flip.css'\r\n\r\n\r\nconst Flip = () => {\r\n    const [anim, setAnimation] = useState(false)\r\n    return (\r\n        <div className='flip'>\r\n            <button onClick={() => setAnimation(!anim)} >{anim ? \"Login->\":\"<-Signup\"}</button>\r\n            <div className={anim ? ['flip-card-inner', 'anim'].join(' ') : 'flip-card-inner'}>\r\n                <div className='login'>\r\n                    <Login />\r\n                </div>\r\n                <div className='signup'>\r\n                    <SignUp />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Flip;","import React from 'react';\r\nimport './home.css'\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport Flip from '../authorization/flip';\r\nimport { Link } from 'react-router-dom';\r\nclass Home extends React.Component {\r\n    state = {\r\n        ponel: false,\r\n        token: null\r\n    }\r\n    componentDidMount() {\r\n        const token = localStorage.getItem('token')\r\n        this.setState({ token: token })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='home'>\r\n                <h2 className='dezaynn'>Welcome</h2>\r\n                <div className='bgImage'>\r\n                    <Link to='/posts' className='homicPoster'>\r\n                        <KeyboardArrowRightIcon style={{ width: '150px', height: '150px', }} />\r\n                        <p style={{ margin: '0', marginTop: '-40px' }}>posts</p>\r\n                    </Link>\r\n                </div>\r\n                {this.state.token ?\r\n                    <div className='profileLink'>\r\n                        <Link to='/profile' style={{\r\n                            textDecoration: 'none',\r\n                            color: 'black',\r\n                            textAlign: 'center',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            My Profile\r\n                        </Link>\r\n                    </div> : <div className={this.state.ponel ? 'koxicHelnox' : 'koxMtnox'}>\r\n                        <Flip />\r\n                        <div onClick={() => this.setState({ ponel: !this.state.ponel })} className='log'>\r\n                            <p>Login/Registrate</p>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { Avatar } from '@material-ui/core'\r\nimport './post.css'\r\n// import LearnMore from '../../UI/learnMore/learnMore';\r\nimport { Link } from 'react-router-dom';\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"avatar\">\r\n                <Link to={'/guest/' + props.userId} style={{ textDecoration: 'none' }}>\r\n                    <Avatar className='Avatar' src={props.img}>{props.name.charAt(0)}</Avatar>\r\n                </Link>\r\n            </div>\r\n            <div className='postContent'>\r\n                <div className=\"posthead\">\r\n                    {/* <div className=\"info\"> */}\r\n                    <p className=\"infop\">{props.name.split(\"@\", 1)}</p>\r\n                    <p className=\"infop\">{props.date.split(\"T\",1)}</p>\r\n                    {/* </div> */}\r\n                </div>\r\n                <div className=\"posttext\">\r\n                    <p className=\"postTitle\">{props.title}</p>\r\n                    <p className=\"postP\">{props.content}</p>\r\n                    {/*<LearnMore title/>\r\n                    <div className=\"postfooter\">\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Post;","import React from 'react';\r\n// import { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.css'\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to='/'>\r\n                <HomeIcon className='homeIcon'/>\r\n            </Link>\r\n            <h2 className=\"h2\">Posts Page</h2>\r\n        </div>\r\n    )\r\n}\r\nexport default Header","import React from 'react';\r\nimport Post from './post/post';\r\n// import './post/post.css';\r\nimport Header from './header/header';\r\nimport './posts.css'\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Posts = (props) => {\r\n    const posts = props.posts.map(esi => {\r\n        return (\r\n            <Post\r\n                id={esi._id}\r\n                userId={esi.userId._id}\r\n                key={esi._id}\r\n                name={esi.userId.name}\r\n                date={esi.date}\r\n                title={esi.title}\r\n                img={esi.userImg}\r\n                content={esi.content}\r\n            />\r\n        )\r\n    })\r\n    if (posts.length > 0) {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className='posts'>\r\n                    {posts}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className='posts'>\r\n                <div style={{ marginLeft: '50%', marginTop: '20%' }}>\r\n                    <ReactLoading type='spin' />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Posts;","import React from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport { Link } from 'react-router-dom';\r\nimport './menuOtherProfile.css'\r\nconst MenuProfile = (props) => {\r\n    return (\r\n        <div className='menuProfile'>\r\n            <div className='AvatarWrap'>\r\n                <Avatar\r\n                    className='bgAvatar'\r\n                    src={props.avatar}\r\n                />\r\n                <p className='userName'>{props.name.split(\"@\", 1)}</p>\r\n            </div>\r\n            <br />\r\n            <div className='menuBar'>\r\n                <div className='postsLink'>\r\n                    <Link to='/posts'>\r\n                        <SubjectIcon className='iconClass' fontSize='large' />\r\n                    </Link>\r\n                    <p className='LinkTo'>Posts</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuProfile;","import React from 'react';\r\nimport './otherProfilePosts.css'\r\n\r\nconst OtherProfilePosts = (props) => {\r\n  if (props.data.length > 0) {\r\n    const ProfilePosts = props.data.map(esi => (\r\n      <div className='ProfilePostsPost'>\r\n        <p className='ProfilePostsTime'>{esi.date.split(\"T\", 1)}</p>\r\n        <div className='text'>\r\n\r\n          <p className='ProfilePostsTitle'>{esi.title}</p>\r\n          <p className='ProfilePostsText'>{esi.content}</p>\r\n        </div>\r\n      </div>\r\n    ))\r\n    return (\r\n      <div className='ProfilePosts'>\r\n        {ProfilePosts}\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div className='ProfilePosts'>\r\n        <h3 className='error'>\r\n          You dont have any post\r\n        </h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OtherProfilePosts;","import React from 'react';\r\nimport OtherProfilePosts from '../otherProfilePost/otherProfilePosts';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Link } from 'react-router-dom';\r\nimport './contentOtherProfile.css'\r\nconst ContentOtherProfile = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div className='contentProfile'>\r\n            <div className='myContent'>\r\n                <Link to='/'>\r\n                    <HomeIcon className='homeIcon' />\r\n                </Link>\r\n                <h2 className='headerContent'>Posts</h2>\r\n            </div>\r\n            <div className='content'>\r\n                <OtherProfilePosts\r\n                    data={props.data} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContentOtherProfile;\r\n","import React from 'react';\r\nimport MenuOtherProfile from './menuOtherProfile/menuOtherProfile';\r\nimport ContentOtherProfile from './contentOtherProfile/contentOtherProfile';\r\nimport './otherProfile.css'\r\nimport ReactLoading from 'react-loading';\r\n\r\n\r\nclass Profile extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    fetchData = async () => {\r\n        try {\r\n            const data = await fetch(`https://immense-bastion-77462.herokuapp.com/posts/profile/${this.props.match.params.id}`)\r\n            const fetchedData = await data.json()\r\n            this.setState({ data: fetchedData })\r\n            console.log(this.state.data[0].userName)\r\n        }\r\n        catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.data.length > 0) {\r\n            return (\r\n                <div className='profile'>\r\n                    <ContentOtherProfile\r\n                        data={this.state.data}\r\n                        toggle={this.state.open}\r\n                        open={this.handleOpen}\r\n                        close={this.handleClose}\r\n                    />\r\n                    <MenuOtherProfile\r\n                        name={this.state.data[0].userName}\r\n                        avatar={this.state.data[0].userImg} />\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className='profile'>\r\n                    <div style={{ marginLeft: '50%', marginTop: '20%' }}>\r\n                        <ReactLoading type='spin' />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport './addProfilePost.css'\r\nclass AddProfilePost extends React.Component {\r\n    state = {\r\n        error: null,\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    add = async() => {\r\n        try {\r\n            const token = localStorage.getItem('token')\r\n            const data = await fetch('https://immense-bastion-77462.herokuapp.com/posts/add', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"auth-token\": token\r\n                },\r\n                body: JSON.stringify({ title: this.state.title, text: this.state.content })\r\n            })\r\n            const fetchedData = await data.json()\r\n            if (fetchedData.message) {\r\n                this.setState({error: fetchedData.message})\r\n            }\r\n            else{\r\n                console.log(fetchedData);\r\n                this.setState({\r\n                    title: '',\r\n                    content: ''\r\n                })\r\n                window.location.reload(false);\r\n            }\r\n        } catch (error) {\r\n            this.setState({error: 'Try again'})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='modalWrap'>\r\n                <h2 style={{ margin: '10px' }} >Add something</h2>\r\n                <input\r\n                    id=\"standard\"\r\n                    placeholder=\"Title\"\r\n                    value={this.state.title}\r\n                    onChange={(v) => this.setState({title: v.target.value})}\r\n                    className='textField' />\r\n                <input\r\n                    id=\"standard-basic\"\r\n                    value={this.state.content}\r\n                    onChange={(v) => this.setState({content: v.target.value})}\r\n                    placeholder=\"post\"\r\n                    className='textField' />\r\n                <button type=\"submit\" onClick={() => this.add()}>Upload Post</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddProfilePost;","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './model.css'\r\nconst SimpleModal = (props) => {\r\n    return (\r\n        <div className='Modal'>\r\n            <Modal\r\n                style={{ backgroundColor:'rgba(0, 0, 0, 0.11)'}}\r\n                open={props.open}\r\n                onClose={props.handleClose} >\r\n                {props.body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nexport default SimpleModal","import React from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport AddProfilePost from './addProfilePost/addProfilePost';\r\nimport SimpleModal from '../../UI/model/model';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './menuProfile.css'\r\nconst MenuProfile = (props) => {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [redirect, setRedirect] = React.useState(false)\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    const body = <AddProfilePost />\r\n    if (redirect) {\r\n        return <Redirect to='/' />\r\n    }\r\n    return (\r\n        <div className='menuProfile'>\r\n            <div className='AvatarWrap'>\r\n                <Avatar\r\n                    className='bgAvatar'\r\n                    src={props.avatar}\r\n                />\r\n                <p className='userName'>{props.name}</p>\r\n            </div>\r\n            <div className='menuBar'>\r\n                <div className='add'>\r\n                    <AddCircleOutlineIcon className='iconClass' color='black' onClick={handleOpen} />\r\n                    <p className='LinkTo'>Add Post</p>\r\n                </div>\r\n                <div className='postsLink'>\r\n                    <Link to='/posts'>\r\n                        <SubjectIcon className='iconClass' fontSize='large' />\r\n                    </Link>\r\n                    <p className='LinkTo'>Posts</p>\r\n                </div>\r\n                <button onClick={() => {\r\n                    localStorage.removeItem('token')\r\n                    console.log(\"token\");\r\n                    setRedirect(true)\r\n                }} className='buttonLogout'>Log Out</button>\r\n                <SimpleModal\r\n                    handleClose={handleClose}\r\n                    open={open}\r\n                    body={body} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuProfile","import React from 'react';\r\nimport './updatePost.css'\r\n\r\n\r\nclass UpdatePost extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            title: this.props.title,\r\n            content: this.props.content\r\n        })\r\n    }\r\n\r\n    Update = async (values, id) => {\r\n        if (this.state.title !== '' && this.state.content !== '') {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const data = await fetch(`https://immense-bastion-77462.herokuapp.com/posts/update/${id}`, {\r\n                    method: \"PATCH\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"auth-token\": token\r\n                    },\r\n                    body: JSON.stringify(values)\r\n                })\r\n                const fetchedData = await data.json()\r\n                if (fetchedData.message) {\r\n                    this.setState({ error: fetchedData.message })\r\n                }\r\n                else {\r\n                    console.log(fetchedData);\r\n                    window.location.reload(false);\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.log(error.message)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='modalWrap'>\r\n                <h2 style={{ margin: '10px' }} >Edit</h2>\r\n                <input\r\n                    id=\"standard\"\r\n                    placeholder=\"Title\"\r\n                    value={this.state.title}\r\n                    onChange={(v) => this.setState({title: v.target.value})}\r\n                    className='editText' />\r\n                <input\r\n                    id=\"standard-basic\"\r\n                    value={this.state.content}\r\n                    onChange={(v) => this.setState({content: v.target.value})}\r\n                    placeholder=\"post\"\r\n                    className='editText' />\r\n                <button type=\"submit\" onClick={() => this.Update(this.state, this.props.id)}>Update Post</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdatePost;\r\n\r\n\r\n/*import React from 'react';\r\nimport './addProfilePost.css'\r\nclass AddProfilePost extends React.Component {\r\n    state = {\r\n        error: null,\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    add = async() => {\r\n        try {\r\n            const token = localStorage.getItem('token')\r\n            const data = await fetch('https://immense-bastion-77462.herokuapp.com/posts/add', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"auth-token\": token\r\n                },\r\n                body: JSON.stringify({ title: this.state.title, text: this.state.content })\r\n            })\r\n            const fetchedData = await data.json()\r\n            if (fetchedData.message) {\r\n                this.setState({error: fetchedData.message})\r\n            }\r\n            else{\r\n                console.log(fetchedData);\r\n                this.setState({\r\n                    title: '',\r\n                    content: ''\r\n                })\r\n                window.location.reload(false);\r\n            }\r\n        } catch (error) {\r\n            this.setState({error: 'Try again'})\r\n        }\r\n    }\r\n\r\n  \r\n}\r\n\r\nexport default AddProfilePost; */","import React from 'react';\r\nimport './profilePosts.css'\r\nimport UpdatePost from './updatePost/updatePost';\r\nimport SimpleModal from '../../UI/model/model';\r\n\r\nclass ProfilePosts extends React.Component {\r\n  state = {\r\n    open: false,\r\n    data: null,\r\n    edit: {}\r\n  }\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n  }\r\n  deletePost = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const data = await fetch(`https://immense-bastion-77462.herokuapp.com/posts/del/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'auth-token': token\r\n        }\r\n      })\r\n      console.log(data);\r\n\r\n      window.location.reload(false);\r\n    }\r\n    catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.data.length > 0) {\r\n      const ProfilePosts = this.props.data.map(esi => (\r\n        <div className='ProfilePostsPost'>\r\n          <button style={{ background: '#0b990b' }}\r\n            onClick={() => this.setState({ open: true, data: esi })}\r\n            className='button' >\r\n            <p>Edit</p>\r\n          </button>\r\n          <button style={{ background: '#db2121' }}\r\n            onClick={() => this.deletePost(esi._id)}\r\n            className='button'>\r\n            <p>X</p>\r\n          </button>\r\n          <p className='ProfilePostsTime' >{esi.date.split(\"T\",1)}</p>\r\n          <div className='text' >\r\n            <p className='ProfilePostsTitle' >{esi.title}</p>\r\n            <p className='ProfilePostsText' >{esi.content}</p>\r\n          </div>\r\n          {/* <table>\r\n            <tr>\r\n              <td><p className='ProfilePostsTitle' >{esi.title}</p></td>\r\n              <td><p className='ProfilePostsText' >{esi.content}</p></td>\r\n            </tr>\r\n          </table> */}\r\n        </div>))\r\n      return (\r\n        <div className='ProfilePosts'>\r\n          {ProfilePosts}\r\n          {this.state.data ?\r\n            <SimpleModal\r\n              handleClose={this.handleClose}\r\n              open={this.state.open}\r\n              body={<UpdatePost\r\n                title={this.state.data.title}\r\n                content={this.state.data.content}\r\n                id={this.state.data._id}\r\n              />} /> : null}\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div className='ProfilePosts'>\r\n          <h3 className='error'>\r\n            You dont have any post\r\n          </h3>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default ProfilePosts;\r\n\r\n\r\n","import React from 'react';\r\nimport ProfilePosts from '../profilePost/profilePosts';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Link } from 'react-router-dom';\r\nimport './contentProfile.css'\r\nconst ContentProfile = (props) => {\r\n    return (\r\n        <div className='contentProfile'>\r\n            <div className='myContent'>\r\n                <Link to='/'>\r\n                    <HomeIcon className='homeIcon' />\r\n                </Link>\r\n                <h2 className='headerContent'>My Posts</h2>\r\n            </div>\r\n\r\n            <div className='content'>\r\n                <ProfilePosts\r\n                    data={props.data} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContentProfile;\r\n\r\n\r\n","import React from 'react';\r\nimport MenuProfile from './menuProfile/menuProfile';\r\nimport ContentProfile from './contentProfile/contentProfile';\r\nimport './profile.css'\r\n\r\n\r\nclass Profile extends React.Component {\r\n    state = {\r\n        targetUser: {},\r\n        posts: []\r\n    }\r\n\r\n    fetchData = async () => {\r\n        const token = localStorage.getItem('token')\r\n        const data = await fetch('https://immense-bastion-77462.herokuapp.com/auth/myProfile', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": token\r\n            }\r\n        })\r\n        const fetchedData = await data.json()\r\n        if (fetchedData.massenge) console.log(fetchedData.massenge);\r\n        else {\r\n            this.setState({\r\n               targetUser: fetchedData\r\n            })\r\n        }\r\n    }\r\n\r\n    fetchPosts = async () => {\r\n        const token = localStorage.getItem('token')\r\n        const data = await fetch('https://immense-bastion-77462.herokuapp.com/posts/myPosts', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": token\r\n            }\r\n        })\r\n        const fetchedData = await data.json()\r\n        if (fetchedData.massenge) console.log(fetchedData.massenge);\r\n        else {\r\n            this.setState({\r\n               posts: fetchedData\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n        this.fetchPosts()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='profile'>\r\n                <ContentProfile\r\n                    data={this.state.posts}\r\n                    toggle={this.state.open}\r\n                    open={this.handleOpen}\r\n                    close={this.handleClose}\r\n                />\r\n                <MenuProfile\r\n                    name={this.state.targetUser.name}\r\n                    avatar={this.state.targetUser.profileImg} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Home from './component/home/home';\r\nimport { Route, Switch } from 'react-router';\r\nimport Posts from './component/posts/posts';\r\nimport OtherProfile from './component/otherProfile/otherProfile';\r\nimport Profile from './component/myProfile/profile';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    postinfo: [\r\n\r\n    ]\r\n  }\r\n\r\n  fetchData = async () => {\r\n    try {\r\n      const data = await fetch('https://immense-bastion-77462.herokuapp.com/posts')\r\n      const fetchedData = await data.json()\r\n      this.setState({ postinfo: fetchedData })\r\n    }\r\n    catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData()\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.postinfo);\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path='/' exact component={Home} />\r\n          <Route path='/posts' exact render={() =>\r\n            <Posts\r\n              posts={this.state.postinfo}\r\n            />} />\r\n          <Route path='/profile' exact component={Profile} />\r\n          <Route path='/guest/:id' exact component={OtherProfile} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}